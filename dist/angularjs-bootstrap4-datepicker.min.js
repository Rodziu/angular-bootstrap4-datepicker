!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("angular"),require("date-extensions")):"function"==typeof define&&define.amd?define("angularjs-bootstrap4-datepicker",["angular","date-extensions"],e):"object"==typeof exports?exports["angularjs-bootstrap4-datepicker"]=e(require("angular"),require("date-extensions")):t["angularjs-bootstrap4-datepicker"]=e(t.angular,t.DateExtended)}(window,(function(t,e){return(()=>{"use strict";var i={734:e=>{e.exports=t},620:t=>{t.exports=e}},s={};function r(t){var e=s[t];if(void 0!==e)return e.exports;var n=s[t]={exports:{}};return i[t](n,n.exports,r),n.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var n={};return(()=>{r.d(n,{default:()=>D});var t=r(734),e=r(620),i=r.n(e);class s{constructor(t,e,i,s){this.displayData=[],this.$attrs=t,this.$timeout=e,this.datePicker=i,this.datePickerService=s}$onInit(){t.isObject(this.datepicker)&&t.isFunction(this.datepicker.disabledDates)&&(this.disabledDates=this.datepicker.disabledDates),this.format="format"in this.$attrs?this.$attrs.format:null!==this.datepicker&&"format"in this.datepicker.$attrs?this.datepicker.$attrs.format:this.datePicker.format,this.modelFormat="modelFormat"in this.$attrs?this.$attrs.modelFormat:null!==this.datepicker&&"modelFormat"in this.datepicker.$attrs?this.datepicker.$attrs.modelFormat:this.datePicker.modelFormat,this.$doCheck(),t.isUndefined(this.minDate)&&(this.minDate=this.datePicker.minDate),t.isUndefined(this.maxDate)&&(this.maxDate=this.datePicker.maxDate),this.monthPicker="monthPicker"in this.$attrs||null!==this.datepicker&&"monthPicker"in this.datepicker.$attrs,this.displayMode=this.monthPicker?"months":"days",this.dayNames=this.datePicker.dayNames,this.monthNames=this.datePicker.monthNames,this.buildCalendar()}$doCheck(){let e;try{this.ngModel instanceof i()?e=this.ngModel.clone():this.ngModel instanceof Date?e=i().createFromDate(this.ngModel):(e=i().createFromFormat(this.modelFormat,this.ngModel),e.isValid()||(e=new(i())(this.ngModel)))}catch(t){e=new(i())}!e.isValid()||this.currentDate instanceof i()&&e.format("Y-m-d")===this.currentDate.format("Y-m-d")?t.isUndefined(this.currentDisplayDate)&&(e=new(i()),this.currentDate=e,this.currentDisplayDate=e.clone()):(this.currentDate=e,this.currentDisplayDate=e.clone())}buildCalendar(){if("months"===this.displayMode)return;let t,e=[];if("days"===this.displayMode){if(!(this._lastRenderedDate instanceof i())||this.currentDisplayDate.format("Y-m")!==this._lastRenderedDate.format("Y-m")){this.displayData=[],this._lastRenderedDate=this.currentDisplayDate.clone();const s=new(i())(this.currentDisplayDate.format("Y-m-01"));let r=parseInt(s.format("N"))-1;for(0===r&&(r=7),s.sub(r,"day"),t=1;t<43;t++)e.push(s.clone()),t%7==0&&(this.displayData.push(e),e=[]),s.add(1)}}else{this.displayData=[];const i=12*Math.floor(this.currentDisplayDate.getFullYear()/12);for(t=0;t<3;t++){e=[];for(let s=0;s<4;s++){const r=i+(4*t+s);e.push(r)}this.displayData.push(e),e=[]}}}changeMode(t){this.displayMode!==t&&(this.displayMode=t,this.buildCalendar())}isEnabledDate(t,e){return this.datePickerService.isEnabledDate(this,t,e)}validDisplayAction(t){const e=this.currentDisplayDate.clone();switch(this.displayMode){case"days":return e.sub("prev"===t?1:-1,"month"),!!this.isEnabledDate(e,"month")&&e;case"months":return e.sub("prev"===t?1:-1,"year"),!!this.isEnabledDate(e,"year")&&e;case"years":{const s=12*Math.floor(this.currentDisplayDate.getFullYear()/12)+("prev"===t?-1:12);if(this.isEnabledDate(new(i())(s+""),"year"))return e.sub("prev"===t?12:-12,"year");break}}return!1}displayAction(t){const e=this.validDisplayAction(t);e&&(this.currentDisplayDate=e,this.buildCalendar())}pickDate(e,s){if(e instanceof Date&&(e=i().createFromDate(e)),e instanceof i()||(e=new(i())(e+"")),this.isEnabledDate(e,s))switch(s){case"day":this.ngModelCtrl.$setViewValue(e.format(this.modelFormat)),this.currentDate=e,this.currentDisplayDate=e,this.buildCalendar(),null!==this.datepicker&&(t.isFunction(this.datepicker.ngChange)&&this.datepicker.ngChange(),!1!==this.datepicker.options.hideOnPick&&this.$timeout((()=>{this.datepicker.isOpen=!1})));break;case"month":this.currentDisplayDate.setMonth(e.getMonth()),this.monthPicker?(this.currentDisplayDate.setDate(1),this.pickDate(this.currentDisplayDate,"day")):this.changeMode("days");break;case"year":this.currentDisplayDate.setFullYear(parseInt(e.format("Y"))),this.changeMode("months")}}}s.$inject=["$attrs","$timeout","datePicker","datePickerService"];const a={bindings:{ngModel:"=",minDate:"<?",maxDate:"<?",disabledDates:"&?"},template:"<table class=\"table table-sm table-datepicker\"><thead><tr><th ng-click=\"ctrl.displayAction('prev')\" ng-class=\"{'disabled': !ctrl.validDisplayAction('prev')}\"><i class=\"fa fa-chevron-left\"></i></th><th ng-click=\"ctrl.changeMode(ctrl.displayMode === 'days' ? 'months' : 'years')\" colspan=\"{{ctrl.displayMode == 'days' ? 5 : 2}}\" ng-switch=\"ctrl.displayMode\"><span ng-switch-when=\"days\">{{ctrl.currentDisplayDate.format('F Y')}}</span> <span ng-switch-when=\"months\">{{ctrl.currentDisplayDate.format('Y')}}</span> <span ng-switch-when=\"years\">{{ctrl.displayData[0][0]}} - {{ctrl.displayData[2][3]}}</span></th><th ng-click=\"ctrl.displayAction('next')\" ng-class=\"{'disabled': !ctrl.validDisplayAction('next')}\"><i class=\"fa fa-chevron-right\"></i></th></tr><tr ng-show=\"ctrl.displayMode == 'days'\"><th ng-repeat=\"d in ::ctrl.dayNames\">{{d}}</th></tr></thead><tbody ng-switch=\"ctrl.displayMode\"><tr ng-switch-when=\"days\" ng-repeat=\"row in ctrl.displayData\"><td ng-repeat=\"d in ::row\" ng-click=\"ctrl.pickDate(d, 'day')\" ng-class=\"{ 'old': d.format('Y-m') < ctrl.currentDisplayDate.format('Y-m'), 'fut': d.format('Y-m') > ctrl.currentDisplayDate.format('Y-m'), 'active': d.format('Ymd') == ctrl.currentDate.format('Ymd'), 'disabled': !ctrl.isEnabledDate(d, 'day')}\">{{::d.format('j')}}</td></tr><tr ng-switch-when=\"months\" ng-repeat=\"row in ::ctrl.monthNames\" class=\"months\"><td ng-repeat=\"m in ::row\" ng-click=\"ctrl.pickDate(ctrl.currentDisplayDate.format('Y-' + m.number), 'month')\" ng-class=\"{'active': ctrl.currentDisplayDate.format('Y' + m.number) == ctrl.currentDate.format('Yn'), 'disabled': !ctrl.isEnabledDate(ctrl.currentDisplayDate.format('Y-' + m.number), 'month')}\">{{::m.name}}</td></tr><tr ng-switch-when=\"years\" ng-repeat=\"row in ctrl.displayData\" class=\"years\"><td ng-repeat=\"y in ::row\" ng-click=\"ctrl.pickDate(y, 'year')\" ng-class=\"{'active': y == ctrl.currentDate.getFullYear(), 'disabled': !ctrl.isEnabledDate(y + '', 'year')}\">{{::y}}</td></tr></tbody></table>",controllerAs:"ctrl",require:{ngModelCtrl:"ngModel",datepicker:"?^datepicker"},controller:s};class o{constructor(t,e,i,s,r,n,a){this.isOpen=!1,this.options={},this.$document=t,this.$scope=e,this.$element=i,this.$attrs=s,this.$parse=r,this.datePicker=n,this.datePickerService=a,this._onClick=t=>{this.isOpen&&!i[0].contains(t.target)&&(this.isOpen=!1,e.$digest())},t.on("click",this._onClick)}$onInit(){if(t.forEach(this.datePicker,((e,i)=>{t.isDefined(this.$attrs[i])?("false"===this.$attrs[i]?this.$attrs[i]=!1:"true"===this.$attrs[i]&&(this.$attrs[i]=!0),this.options[i]=this.$attrs[i]):this.options[i]=e})),t.isFunction(this.ngChange)){const t=this.ngChange,e=this.$parse(this.$attrs.ngModel);this.ngChange=()=>{e.assign(this.$scope.$parent,this.ngModel),t()}}}$onChanges(){this.isSmall=this.$element.hasClass("form-control-sm"),this.isLarge=this.$element.hasClass("form-control-lg")}$onDestroy(){this.$document.off("click",this._onClick)}isEnabledDate(t,e){return this.datePickerService.isEnabledDate(this,t,e)}}o.$inject=["$document","$scope","$element","$attrs","$parse","datePicker","datePickerService"];const c={bindings:{ngModel:"=",minDate:"<?",maxDate:"<?",disabledDates:"&?",ngChange:"&?",placeholder:"@?"},template:'<div class="dropdown" ng-class="{ \'input-group\': dpCtrl.options.showIcon, \'input-group-sm\': dpCtrl.isSmall, \'input-group-lg\': dpCtrl.isLarge, \'show\': dpCtrl.isOpen}"><input type="text" class="form-control" ng-model="dpCtrl.ngModel" datepicker-input ng-attr-placeholder="{{dpCtrl.placeholder}}" ng-click="dpCtrl.isOpen = true" ng-required="dpCtrl.isRequired"><ul class="dropdown-menu dropdown-menu-right angular-datepicker" ng-click="$event.stopPropagation()" ng-class="{\'show\': dpCtrl.isOpen}"><li ng-if="dpCtrl.isOpen"><datepicker-calendar ng-model="dpCtrl.ngModel" min-date="dpCtrl.minDate" max-date="dpCtrl.maxDate"></datepicker-calendar></li></ul><span class="input-group-append" ng-show="::dpCtrl.options.showIcon"><button type="button" class="btn btn-outline-secondary" data-ng-disabled="dpCtrl.isDisabled" ng-click="dpCtrl.isOpen = true"><i class="fa fa-calendar"></i></button></span></div>',controllerAs:"dpCtrl",controller:o};function l(e,s){return{restrict:"A",require:["ngModel","^datepicker"],link:function(r,n,a,o){const[c,l]=o;s.mimicAttributes(n,l);const d="format"in l.$attrs?l.$attrs.format:e.format,h="modelFormat"in l.$attrs?l.$attrs.modelFormat:e.modelFormat;function p(e,s,r){if(t.isString(e)&&""!==e){const t=i().createFromFormat(s,e);if(t.isValid())return r?t.format(r):t}return e}c.$parsers.push((t=>p(t,d,h))),c.$formatters.push((t=>p(t,h,d))),c.$validators.date=e=>{let s=!1;if(t.isUndefined(e)||""===e)s=!0;else{const r=p(e,h);r instanceof i()&&(s=!t.isDefined(l.isEnabledDate)||l.isEnabledDate(r,"day"))}return n[0].setCustomValidity(s?"":" "),s}}}}l.$inject=["datePicker","datePickerCoreService"];const d=t.module("datePicker.core",[]).factory("datePickerCoreService",class{constructor(){this.inputAttributes=["required","disabled","readonly"]}mimicAttributes(t,e){this.inputAttributes.forEach((i=>{e.$attrs.$observe(i,(s=>{if("disabled"===i)e.isDisabled=s;else if("required"===i)return void(e.isRequired=s);t.attr(i,s?i:null)}))}))}}).name,h=t.module("datePicker.datePicker",[d]).provider("datePicker",class{constructor(){this.options={showIcon:!0,hideOnPick:!1,dayNames:[],monthNames:[],format:"Y-m-d",modelFormat:"Y-m-d",updateDateTranslations:()=>{this.options.dayNames=i().getDayShortNames(),this.options.dayNames.push(this.options.dayNames.shift()),this.options.monthNames=[];for(let t=0;t<3;t++){const e=[];for(let s=0;s<4;s++){const r=4*t+s+1;e.push({name:i().getMonthShortNames()[r-1],number:r})}this.options.monthNames.push(e)}}},this.options.updateDateTranslations()}$get(){return this.options}}).factory("datePickerService",class{isEnabledDate(e,s,r){s instanceof Date||(s=new(i())(s+""));const n=s.getFullYear(),a=s.getMonth(),o=s.getDate(),c=function(s){if(t.isDefined(e[s+"Date"])){const t=e[s+"Date"]instanceof i()?e[s+"Date"]:e[s+"Date"]instanceof Date?i().createFromDate(e[s+"Date"]):new(i())(e[s+"Date"]),c=function(t,e,i){return"min"===s?t>e||!!i&&t===e:t<e||!!i&&t===e};if(t.isValid())return c(n,t.getFullYear())||n===t.getFullYear()&&("year"===r||c(a,t.getMonth())||a===t.getMonth()&&("month"===r||c(o,t.getDate(),!0)))}return!0},l=c("min")&&c("max");return l&&t.isFunction(e.disabledDates)?e.disabledDates({date:s,mode:r}):l}}).component("datepickerCalendar",a).component("datepicker",c).directive("datepickerInput",l).name;class p{constructor(t,e,i,s,r,n){this.options={},this.$document=t,this.$scope=e,this.$element=i,this.$attrs=s,this.$parse=r,this.timePicker=n}$onInit(){if(t.forEach(this.timePicker,((e,i)=>{t.isDefined(this.$attrs[i])?("false"===this.$attrs[i]?this.$attrs[i]=!1:"true"===this.$attrs[i]&&(this.$attrs[i]=!0),this.options[i]=this.$attrs[i]):this.options[i]=e})),t.isFunction(this.ngChange)){const t=this.ngChange,e=this.$parse(this.$attrs.ngModel);this.ngChange=()=>{e.assign(this.$scope.$parent,this.ngModel),t()}}this.isOpen=!1,this.$attrs.$observe("required",(t=>{this.isRequired=!!t})),this._onClick=t=>{this.isOpen&&!this.$element[0].contains(t.target)&&(this.isOpen=!1,this.$scope.$digest())},this.$document.on("click",this._onClick)}$onChanges(){this.isSmall=this.$element.hasClass("form-control-sm"),this.isLarge=this.$element.hasClass("form-control-lg")}$onDestroy(){this.$document.off("click",this._onClick)}}p.$inject=["$document","$scope","$element","$attrs","$parse","timePicker"];const u={bindings:{ngModel:"=",pickHours:"<?",pickMinutes:"<?",pickSeconds:"<?",ngChange:"&?",placeholder:"@?"},template:'<div class="dropdown" ng-class="{ \'input-group\': tpCtrl.options.showIcon, \'input-group-sm\': tpCtrl.isSmall, \'input-group-lg\': tpCtrl.isLarge, \'show\': tpCtrl.isOpen}"><input type="text" class="form-control" ng-model="tpCtrl.ngModel" ng-required="tpCtrl.isRequired" ng-attr-placeholder="{{tpCtrl.placeholder}}" timepicker-input ng-click="tpCtrl.isOpen = true"><ul class="dropdown-menu dropdown-menu-right angular-timepicker" ng-click="$event.stopPropagation()" ng-class="{\'show\': tpCtrl.isOpen}"><li ng-if="tpCtrl.isOpen"><timepicker-drop ng-model="tpCtrl.ngModel" pick-hours="tpCtrl.pickHours" pick-minutes="tpCtrl.pickMinutes" pick-seconds="tpCtrl.pickSeconds"></timepicker-drop></li></ul><span class="input-group-append" ng-show="::tpCtrl.options.showIcon"><button type="button" class="btn btn-outline-secondary" data-ng-disabled="tpCtrl.isDisabled" ng-click="tpCtrl.isOpen = true"><i class="fa fa-clock"></i></button></span></div>',controllerAs:"tpCtrl",controller:p};class m{constructor(t,e){this.mode="picker",this.hours=0,this.minutes=0,this.seconds=0,this.$timeout=t,this.timePicker=e,this.hoursArray=this.timePicker.hours,this.minutesArray=this.timePicker.minutes}$onInit(){t.isUndefined(this.pickHours)&&(this.pickHours=this.timePicker.pickHours),t.isUndefined(this.pickMinutes)&&(this.pickMinutes=this.timePicker.pickMinutes),t.isUndefined(this.pickSeconds)&&(this.pickSeconds=this.timePicker.pickSeconds),this.parseFromNgModel()}$doCheck(){t.equals(this.ngModel,this._ngModel)||(this._ngModel=this.ngModel,this.parseFromNgModel())}parseFromNgModel(){t.isString(this.ngModel)&&(this.hours=0,this.minutes=0,this.seconds=0);try{let t=0,e=0,i=0,s=!1;this.ngModel.split(":").some(((r,n)=>{switch(n){case 0:if(this.pickHours)t=parseInt(r);else if(this.pickMinutes)e=parseInt(r),s=!0;else if(this.pickSeconds)return i=parseInt(r),!0;break;case 1:if(this.pickMinutes&&!s)e=parseInt(r);else if(this.pickSeconds)return i=parseInt(r),!0;break;case 2:return this.pickSeconds&&(i=parseInt(r)),!0}})),isNaN(t)||isNaN(e)||isNaN(i)||(this.hours=t,this.minutes=e,this.seconds=i)}catch(t){}}setMode(t){this.mode=t}change(t,e){const i="hours"===t?23:59;e?this[t]++:this[t]--,this[t]>i?this[t]=0:this[t]<0&&(this[t]=i),this.updateModel()}updateModel(){const e=[];this.pickHours&&e.push(this.hours<10?"0"+this.hours:this.hours),this.pickMinutes&&e.push(this.minutes<10?"0"+this.minutes:this.minutes),this.pickSeconds&&e.push(this.seconds<10?"0"+this.seconds:this.seconds),this.ngModel=e.join(":"),this.ngModelCtrl.$setViewValue(this.ngModel),null!==this.timepicker&&t.isFunction(this.timepicker.ngChange)&&this.timepicker.ngChange()}pick(t,e){this[t]=parseInt(e),this.mode="picker",this.updateModel(),null!==this.timepicker&&!1!==this.timepicker.options.hideOnPick&&this.$timeout((()=>{this.timepicker.isOpen=!1}))}}m.$inject=["$timeout","timePicker"];const g={bindings:{ngModel:"=",pickHours:"<?",pickMinutes:"<?",pickSeconds:"<?"},template:'<table class="table table-sm table-timepicker" ng-switch="ctrl.mode"><tbody ng-switch-when="picker"><tr><td ng-if="ctrl.pickHours"><a ng-click="ctrl.change(\'hours\', true)"><i class="fa fa-chevron-up"></i></a></td><td ng-if="ctrl.pickMinutes"><a ng-click="ctrl.change(\'minutes\', true)"><i class="fa fa-chevron-up"></i></a></td><td ng-if="ctrl.pickSeconds"><a ng-click="ctrl.change(\'seconds\', true)"><i class="fa fa-chevron-up"></i></a></td></tr><tr class="timepicker-values"><td ng-if="ctrl.pickHours"><a ng-click="ctrl.setMode(\'hours\')">{{ctrl.hours | datePad}}</a></td><td ng-if="ctrl.pickMinutes"><a ng-click="ctrl.setMode(\'minutes\')">{{ctrl.minutes | datePad}}</a></td><td ng-if="ctrl.pickSeconds"><a ng-click="ctrl.setMode(\'seconds\')">{{ctrl.seconds | datePad}}</a></td></tr><tr><td ng-if="ctrl.pickHours"><a ng-click="ctrl.change(\'hours\')"><i class="fa fa-chevron-down"></i></a></td><td ng-if="ctrl.pickMinutes"><a ng-click="ctrl.change(\'minutes\')"><i class="fa fa-chevron-down"></i></a></td><td ng-if="ctrl.pickSeconds"><a ng-click="ctrl.change(\'seconds\')"><i class="fa fa-chevron-down"></i></a></td></tr></tbody><tbody ng-switch-when="hours"><tr ng-repeat="h in ::ctrl.hoursArray" class="hours"><td ng-repeat="hh in ::h"><a ng-click="ctrl.pick(\'hours\', hh.hour)">{{::hh.hour}}</a></td></tr></tbody><tbody ng-switch-default><tr ng-repeat="m in ::ctrl.minutesArray" class="hours"><td ng-repeat="mm in ::m"><a ng-click="ctrl.pick(ctrl.mode, mm.minute)">{{::mm.minute}}</a></td></tr></tbody></table>',controllerAs:"ctrl",require:{timepicker:"?^timepicker",ngModelCtrl:"ngModel"},controller:m};function k(e){return{restrict:"A",require:["ngModel","^timepicker"],link:function(i,s,r,n){const[a,o]=n;e.mimicAttributes(s,o);const c=[];o.options.pickHours&&c.push("([0-1]?[0-9]|2[0-3])"),o.options.pickMinutes&&c.push("[0-5][0-9]"),o.options.pickSeconds&&c.push("[0-5][0-9]");const l=new RegExp(`^${c.join(":")}$`);a.$validators.time=e=>{let i=!1;return t.isUndefined(e)||""===e?i=!0:t.isString(e)&&(i=l.test(e)),s[0].setCustomValidity(i?"":" "),i}}}}k.$inject=["datePickerCoreService"];const f=t.module("datePicker.timePicker",[d]).provider("timePicker",class{constructor(){this.options={pickHours:!0,pickMinutes:!0,pickSeconds:!0,showIcon:!0,hideOnPick:!1,hours:[],minutes:[]};const t=[],e=[];let i,s;for(i=0;i<10;i++){const r=[],n=[];for(s=0;s<6;s++){if(i<6&&s<4){const t=4*i+s;r.push({hour:t<10?"0"+t:t})}const t=6*i+s;n.push({minute:t<10?"0"+t:t})}t.push(r),e.push(n)}this.options.hours=t,this.options.minutes=e}$get(){return this.options}}).filter("datePad",(function(){return function(e){return t.isNumber(e)&&e<10?"0"+e:e}})).component("timepicker",u).component("timepickerDrop",g).directive("timepickerInput",k).name,D=t.module("datePicker",[h,f]).name})(),n.default})()}));
//# sourceMappingURL=angularjs-bootstrap4-datepicker.min.js.map